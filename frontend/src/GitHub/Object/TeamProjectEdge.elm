-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GitHub.Object.TeamProjectEdge exposing (..)

import GitHub.InputObject
import GitHub.Interface
import GitHub.Object
import GitHub.Scalar
import GitHub.ScalarCodecs
import GitHub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| A cursor for use in pagination.
-}
cursor : SelectionSet String GitHub.Object.TeamProjectEdge
cursor =
    Object.selectionForField "String" "cursor" [] Decode.string


{-| The parent team that grants inherited permission to this project
-}
inheritedPermissionOrigin : SelectionSet decodesTo GitHub.Object.Team -> SelectionSet (Maybe decodesTo) GitHub.Object.TeamProjectEdge
inheritedPermissionOrigin object_ =
    Object.selectionForCompositeField "inheritedPermissionOrigin" [] object_ (identity >> Decode.nullable)


{-| The item at the end of the edge.
-}
node : SelectionSet decodesTo GitHub.Object.Project -> SelectionSet (Maybe decodesTo) GitHub.Object.TeamProjectEdge
node object_ =
    Object.selectionForCompositeField "node" [] object_ (identity >> Decode.nullable)


{-| The HTTP path for this team's project
-}
teamProjectResourcePath : SelectionSet GitHub.ScalarCodecs.Uri GitHub.Object.TeamProjectEdge
teamProjectResourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "teamProjectResourcePath" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The HTTP URL for this team's project
-}
teamProjectUrl : SelectionSet GitHub.ScalarCodecs.Uri GitHub.Object.TeamProjectEdge
teamProjectUrl =
    Object.selectionForField "ScalarCodecs.Uri" "teamProjectUrl" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)
