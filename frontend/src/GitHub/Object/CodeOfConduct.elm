-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GitHub.Object.CodeOfConduct exposing (..)

import GitHub.InputObject
import GitHub.Interface
import GitHub.Object
import GitHub.Scalar
import GitHub.ScalarCodecs
import GitHub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The body of the Code of Conduct
-}
body : SelectionSet (Maybe String) GitHub.Object.CodeOfConduct
body =
    Object.selectionForField "(Maybe String)" "body" [] (Decode.string |> Decode.nullable)


id : SelectionSet GitHub.ScalarCodecs.Id GitHub.Object.CodeOfConduct
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| The key for the Code of Conduct
-}
key : SelectionSet String GitHub.Object.CodeOfConduct
key =
    Object.selectionForField "String" "key" [] Decode.string


{-| The formal name of the Code of Conduct
-}
name : SelectionSet String GitHub.Object.CodeOfConduct
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| The HTTP path for this Code of Conduct
-}
resourcePath : SelectionSet (Maybe GitHub.ScalarCodecs.Uri) GitHub.Object.CodeOfConduct
resourcePath =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "resourcePath" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The HTTP URL for this Code of Conduct
-}
url : SelectionSet (Maybe GitHub.ScalarCodecs.Uri) GitHub.Object.CodeOfConduct
url =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "url" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)
